#!/usr/bin/env bash
#
# BEATS: Standalone script to play BEATS
# https://www.github.com/Randomguy-8/Beats
#
# Last Modified 21.07.2022 09:42:36



## Important
#
# Do One thing, but do it Right
# Standalone script
# Moduler


## ToDo
#
# Add config
## improve appearnce (colors) == Done on [1-7-2022]
### Adding Dev.debug line == Done
# Adding more status (play, pause, stop, repaly, shuffel)
## Improving functionality == Done on [30-6-2022] [7-21-2022]
# Setting right key for right functions(vim keybindings)
# Documentation
# Adding Short by (List by Alphabet, size, album)
# Adding playlist
# More information about Beat
# Adding in Every os' repositry (Making it available via package managers)
# Try to add online support
# Setting page(Config)
# Cool "About" Page
# Allow window to resize upto 1 line and 10 columns
# Moduler, Plugins
# Add argument (-p) ( RANDOM, LASTSESSON, FISTSONG, LASTSONG) or any other particular song
## Cleaning Code - (Rearranging functions, removing useless code, ) = Done on [10-6-2022] [30-6-2022] [7-21-2022]



## Predefine
Version=22.6.6
sleep 0.01
Columns=$COLUMNS
Lines=$LINES
DirectoryOfBeats="$HOME/Music"

## Variables & Arrays
TextSize=""          # Size Of Text
Beat_Name[0]=""      # Stores name of the beats
TemporaryNumber=""   # Just for temporary
TotalNoOfBeats=""    # Number of BEAT files
Input1=""            # Takes Input
SelectedBeat=""      # Beat that is selected
BeatToPlay=""        # Name of the beat that is going to play



## Colors

# Regular
Black='\e[0;30m' && Red='\e[0;31m'
Green='\e[0;32m' && Yellow='\e[0;33m'
Blue='\e[0;34m' && Purple='\e[0;35m'
Cyan='\e[0;36m' && White='\e[0;37m'
# Bold
BoldBlack='\e[1;30m' && BoldRed='\e[1;31m'
BoldGreen='\e[1;32m' && BoldYellow='\e[1;33m'
BoldBlue='\e[1;34m' && BoldPurple='\e[1;35m'
BoldCyan='\e[1;36m' && BoldWhite='\e[1;37m'
# Italic
ItalicBlack='\e[3;30m' && ItalicRed='\e[3;31m'
ItalicGreen='\e[3;32m' && ItalicYellow='\e[3;33m'
ItalicBlue='\e[3;34m' && ItalicPurple='\e[3;35m'
ItalicCyan='\e[3;36m' && ItalicWhite='\e[3;37m'
# Underline
UnderlineBlack='\e[4;30m' && UnderlineRed='\e[4;31m'
UnderlineGreen='\e[4;32m' && UnderlineYellow='\e[4;33m'
UnderlineBlue='\e[4;34m' && UnderlinePurple='\e[4;35m'
UnderlineCyan='\e[4;36m' && UnderlineWhite='\e[4;37m'
# BackgroUnderline
BackgroundBlack='\e[40m' && BackgroundRed='\e[41m'
BackgroundGreen='\e[42m' && BackgroundYellow='\e[43m'
BackgroundBlue='\e[44m' && BackgroundPurple='\e[45m'
BackgroundCyan='\e[46m' && BackgroundWhite='\e[47m'
# Reset
Noc='\e[0m'



## Stolen From Simple Bash Curses.
        #LC_ALL=C
        #LANG=C

#while [[ $Columns -gt $TempraryNumber ]]; do
#echo -en $_HLINE
#((TempraryNumber++))
#done


center_simple_(){
    TextSize=$(echo -n "$1" | wc -m)
    for (( i=1; i <= $(( (Columns/2) - (TextSize/2) )); i++ )); do
        echo -en " "
    done
    echo -en "$3$1" # $1 = text | $2 = parameters | $3 = Colors

    for (( i=1; i <= $(( Columns - ((Columns/2) - (TextSize/2) + (TextSize)) )); i++ )); do
        echo -en " "
    done
    echo
}

center_absolute_(){
    TextSize="$(echo -n "$2" | wc -m)"
    CenterOfColumns=$5
    [[ -z $5 ]] && CenterOfColumns=$(( (Columns/2) - (TextSize/2) + 1))  # +1 (dont know)
    echo -e $3 "$Noc\e[${1};${CenterOfColumns}H$4$2$Noc"  # $1 = Row No. | $2 = text | $3 = parameters | $4 = Colors | $5 Column
}


title_() {
    center_absolute_ "1" "BEATS PLAYER" "-n" "$BoldCyan"

    if [[ $DebugBar == true ]]; then
        echo
        center_absolute_ 2  \
        "$(center_simple_ "[Sel=$SelectedBeat] [From:To=$ListBeatsFrom:$ListBeatsBeforeFrom] [Show=$NoOfBeatsToShow] [Cen=$CenterOfListedBeats] [Total=$TotalNoOfBeats]")"\
        "" "$BoldPurple"

    else
        #center_absolute_ "2" "Total $TotalNoOfBeats" "" "$BoldPurple" "$((Columns/$Columns))"
        center_absolute_ "2" "$(echo $PWD | cut -c "$(($(echo $HOME | wc -m) +1))"-)/" "" "$BoldGreen"
        #center_absolute_ "2" " Selected $SelectedBeat" "" "$BoldPurple" "$((Columns-($(echo -n "$SelectedBeat" | wc -m))-9))"
    fi
}

page_main_(){
    title_
    # NEED EDIT (adding Mechanism, such that even if beats are less than $LINES, remaining beats will be still aligned to center)
    [[ $(( Lines/2)) -lt 4 ]] && center_absolute_ "2" || center_absolute_ "$(( (Lines/2) - (CenterOfListedBeats)))" ## NEED EDIT (NOT COMPLETE)

    for (( i6 = $ListBeatsFrom; i6 < ListBeatsBeforeFrom; i6++ )); do
        [[ $SelectedBeat -eq $i6 ]] && echo -e "$NOC$BoldWhite${Beat_Name[$i6]}" || echo -e "$NOC$White${Beat_Name[$i6]}"
    done

    status_bar_
}

status_bar_(){
    if [[ $FreshStart == true ]]; then
        Duration="Duration: 00.00"
        BeatStatus="Stopped | "
        CurrentlyPlayingBeat="Nothing Yet"
        [[ $Shuffel == true ]] && ShuffelStatus="Shuffel | " || ShuffelStatus=""
    else

        # Shuffel
        [[ $Shuffel == true ]] && ShuffelStatus="Shuffel | " || ShuffelStatus=""

        # Playing Or Stoped
        [[ -z $BEATPID ]] && BeatStatus="Stopped | " || BeatStatus="Playing | "
     fi

    center_absolute_ "$((Lines-1))" "$CurrentlyPlayingBeat" "-n" "$BoldBlue"
    center_absolute_ "$Lines" "$(center_simple_ "$BeatStatus$ShuffelStatus$Duration$doneplaying")" "-n" "$BoldRed"
}


initialize_beats_(){
    TotalNoOfBeats=$(find *.m4a *.mp3 2>/dev/null| wc -l)

    # Store Beats Name
    TemporaryNumber=1
    clear
    center_absolute_ "$((Lines/2))" "Searching for Beats..."

        until [[ $TemporaryNumber -eq $((TotalNoOfBeats+1)) ]]; do
            Beat_Name[$TemporaryNumber]="$(find *.m4a *.mp3 2>/dev/null| sed -n ${TemporaryNumber}"p")"

	    ## Get rid of extra long Beats name
            if [[ $(echo -n "${Beat_Name[$TemporaryNumber]}" | wc -m) -gt $Columns ]]; then
                Beat_Name[$TemporaryNumber]="$(echo "${Beat_Name[$TemporaryNumber]}" | cut -c -"$((Columns-3))")..."

            else
                Beat_Name[$TemporaryNumber]="$(center_simple_ "${Beat_Name[$TemporaryNumber]%.*}")"
            fi

            ((TemporaryNumber++))
        done

        clear

    # Show Beats Before From
    if [[ $Lines -lt 6 ]]; then
        ListBeatsBeforeFrom=3

    elif [[ $Lines -lt 11 ]]; then
        ListBeatsBeforeFrom=$((Lines-3))

    else
        ListBeatsBeforeFrom=$((Lines-5))
    fi

    [[ $ListBeatsBeforeFrom -gt $TotalNoOfBeats ]] && ListBeatsBeforeFrom=$((TotalNoOfBeats+1))
    NoOfBeatsToShow=$((ListBeatsBeforeFrom-1))

    # Center Of Listed Beats
    if [[ $NoOfBeatsToShow -lt 2 ]]; then
        CenterOfListedBeats=1

    elif [[ $((NoOfBeatsToShow % 2)) -eq 0 ]]; then
        CenterOfListedBeats=$((NoOfBeatsToShow/2))

    else
        CenterOfListedBeats=$(( (NoOfBeatsToShow/2)+1 ))
    fi

    SelectedBeat=$CenterOfListedBeats && ListBeatsFrom=1
}

play_beat_(){
    if [[ $BEATPID == "" ]]; then
        FreshStart=false
        CurrentlyPlayingBeat=${Beat_Name[$SelectedBeat]}
        # Throw Output of ffplay in /tmp
        rm /tmp/beats-player-data.txt 2>/dev/null
        play_(){
			ffplay -nodisp -hide_banner -autoexit "$BeatToPlay" 2>/tmp/beats-player-data.txt
			doneplaying="yes"
			BEATPID=""
			clear
			page_main_
		}
		play_  &
        BEATPID="12345678"

        # Search For $Duration Only For 0.4 Seconds Or Probabbly More
        for (( i=0; i<40; i++ )); do
            if [[ ! -z $(cat /tmp/beats-player-data.txt 2>/dev/null| grep  Duration ) ]]; then
                Duration="$(cat /tmp/beats-player-data.txt 2>/dev/null| grep  "Duration" | grep -o "[00-99][0-9]:[0-9][0-9]:[0-9][0-9].[0-9][0-9]")"
                break
            fi
            sleep 0.01
        done


    else
        BeatToPlay=$CurrentyPlayingBeat ## fix: current playing beat does't get exchange with select Beat
    fi
}

controles_(){
    while true; do
        page_main_

        read -rs -N1 Input1

        case $Input1 in
            $'\n') # Play Beat
                PreviousPlayedBeat=$BeatToPlay
                BeatToPlay="$(find *.m4a *.mp3 2>/dev/null| sed -n ${SelectedBeat}p)"
                play_beat_
                continue
            ;;

            ' ') # Play, Pause
                PreviousPlayedBeat=$BeatToPlay
                BeatToPlay="$(find *.m4a *.mp3 2>/dev/null| sed -n ${SelectedBeat}p)"
                play_beat_
                continue
            ;;

            "x") # Stop Beat
                kill $BEATPID 2> /dev/null
                BEATPID=""
                shuffel_beat_
                continue
            ;;

            "q") # Exit
                clear
                kill $BEATPID
                exit
            ;;

            "s") # Tongle Shuffel
                [[ $Shuffel == false ]] && Shuffel=true || Shuffel=false
                continue
            ;;

            "w") # widgit
                widgit_time_
                continue
            ;;

            *) # Read Special Characters
                read -t 0.01 -rsn4 Input1

                case $Input1 in
                    "[A"|"k" ) # Up
                        if [[ $SelectedBeat -eq 1 ]]; then
                        # When there is no more Beats to select
                            if [[ $InfinityScrollOfBeats == true ]]; then
                                SelectedBeat=$((TotalNoOfBeats))
                                ListBeatsFrom=$((TotalNoOfBeats-NoOfBeatsToShow+1))
                                ListBeatsBeforeFrom=$((TotalNoOfBeats+1))

                            else
                                SelectedBeat=1
                            fi

                        elif [[ $SelectedBeat -gt $((ListBeatsFrom+(CenterOfListedBeats-1))) ]]; then
                        # Move "SelectedBeat" to Center from last BEAT.
                            ((SelectedBeat--))

                        elif [[ $ListBeatsBeforeFrom -eq $((NoOfBeatsToShow+1)) ]]; then
                        # Move "SelectedBeat" to first BEAT from Center..
                            ((SelectedBeat--))

                        else
                            ((SelectedBeat--))
                            ((ListBeatsFrom--))
                            ((ListBeatsBeforeFrom--))
                        fi
                    ;;

                    "[B"|"j" ) # Down
                        if [[ $SelectedBeat -eq $TotalNoOfBeats ]]; then
                        # When there is no more Beats to select
                            if [[ $InfinityScrollOfBeats == true ]]; then
                                SelectedBeat=1
                                ListBeatsFrom=1
                                ListBeatsBeforeFrom=$((NoOfBeatsToShow+1))

                            else
                                SelectedBeat=$((TotalNoOfBeats))
                            fi

                        elif [[ $SelectedBeat -lt $CenterOfListedBeats ]]; then
                        # Move "SelectedBeat" to Center from first BEAT.
                            ((SelectedBeat++))

                        elif [[ $ListBeatsBeforeFrom -gt $TotalNoOfBeats ]]; then
                        # Move "SelectedBeat" to Last BEAT from Center.
                            ((SelectedBeat++))

                        else
                            ((SelectedBeat++))
                            ((ListBeatsFrom++))
                            ((ListBeatsBeforeFrom++))
                        fi
                    ;;

                esac
        esac

    done
}

startup_check_(){
    # Lets throw errors, hahaha! (SYSTEM CHECK)

    # rm old session files.
    rm /tmp/beats-player-data.txt

    # Check if ffplay exists?
    if [[ -f /bin/ffplay ]]; then
        if [[ -f /bin/mpeg321 ]]; then
            if [[ -f /bin/mpeg123 ]]; then
                echo -e 'Please Install One of These Dependencies To Play BEATS!\n
                 \r-> ffplay - Supports moaaaast of Music Formats
                 \r-> mpg321, mpg123 - Supports Only MPEG Format\n'
                 exit 0
            fi
        fi
    fi
}

shuffel_beat_(){
    if [[ $Shuffel == true ]]; then
        ((SelectedBeat++))
        BEATPID=""
        BeatStatus="Stopped"
        [[ $SelectedBeat -gt $TotalNoOfBeats ]] && SelectedBeat=1
        BeatToPlay="$(find *.m4a *.mp3 2>/dev/null| sed -n ${SelectedBeat}p)"
        play_beat_
    fi
}

widgit_time_(){
    clear
    title_

    for (( i2=0; i2 < $((Lines / 2 - 2 -(ListBeatsBeforeFrom-ListBeatsFrom) / 2 )); i2++ )); do
        echo -en "\n"
    done

    center_simple_ "$(date)" "-n" "$BoldRed"
    echo -e "$Noc"
    read -N 1 TemporaryNumber
    clear
}

cursor_enable_(){
    stty echo
    printf "\e[?25h"
}

main(){
    ## Enable and Disable cursor
    trap cursor_enable_ EXIT
    stty -echo; printf "\e[?25l"

    ## Parameters
    TemporaryNumber=0
    for i in $@; do
        Parameters[$TemporaryNumber]="$i"
        ((TemporaryNumber++))
    done

    ## Config
    #ConfigFile=$HOME/.config/Beats-Player/beats.sh && source $ConfigFile
    Beats_Folder[1]="$HOME/Music"
    DefaultPWD=$PWD
    CurrentBeatsFolder=1
    cd ${Beats_Folder[$CurrentBeatsFolder]}

    ## Dont Change! Or else you suffer
    FreshStart=true

    Shuffel=true && InfinityScrollOfBeats=false && DebugBar=true

    startup_check_
    initialize_beats_
    controles_
}

main "$@"
